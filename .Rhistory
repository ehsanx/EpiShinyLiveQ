url <- "https://github.com/ehsanx/EpiShinyLiveQ/raw/main/data/NHANESanalytic.Rdata"
destfile <- tempfile()
response <- GET(url)
# Load necessary libraries
library(shiny)
library(Publish)
library(jtools)
library(ggstance)
library(broom.mixed)
library(huxtable)
library(httr)
library(tableone)
url <- "https://github.com/ehsanx/EpiShinyLiveQ/raw/main/data/NHANESanalytic.Rdata"
destfile <- tempfile()
response <- GET(url)
if (status_code(response) == 200){
writeBin(content(response, "raw"), destfile)
load(destfile)
unlink(destfile)
} else {
print(paste("Failed to download. Status code:", status_code(response)))
}
analytic.data2 <- as.data.frame(na.omit(analytic.data1))
rm(analytic.data1)
dput(analytic.data2)
fileConn <- file("E:/GitHub/EpiShinyLiveQ/data/analyticData2.txt")
dput(analytic.data2, fileConn)
close(fileConn)
runApp('app')
# Define the paths
getwd()
app_path <- paste0(getwd(), "/app/")
output_path <- paste0(getwd(), "/docs")
# Use the paths in the export function
shinylive::export(app_path, output_path)
httpuv::runStaticServer(paste0(getwd(), "/docs"))
shiny::runGitHub("EpiShinyLiveQ", "ehsanx", subdir = "app")
